<?xml version="1.0"?>
  <database name="TRIGGER PMB_BRIEF">
    <trigger name="PMB_BRIEF" table="PMB_PROJECT_BRIEF" fires="before" insert="true" update="true" delete="false" foreach="row">
      <body><![CDATA[CBID VARCHAR[];
IDBRIEF VARCHAR(32);
TIT VARCHAR(60);
GEN VARCHAR(60);
TRAD VARCHAR(60);
NAM VARCHAR(100);
NAM2 VARCHAR(100);
CANT INTEGER;
CONT INTEGER;
BEGIN
	IDBRIEF := :NEW.C_PROJECT_ID;

	SELECT em_pmb_title,em_pmb_genre INTO TIT,GEN FROM C_PROJECT WHERE C_PROJECT_ID = IDBRIEF;

	--Raise Exception '%','Genero '||gen;

	SELECT ARLT.NAME INTO TRAD FROM AD_Ref_List ARL
	LEFT JOIN AD_Ref_List_Trl ARLT ON ARLT.AD_Ref_List_ID = ARL.AD_Ref_List_ID
	WHERE  ARL.VALUE=GEN limit 1;

	:NEW.TITLE := TIT;
	:NEW.GENRE := TRAD;

	--AUTORES
	CBID := ARRAY(SELECT C_BPARTNER_ID FROM PMB_AUTHOR WHERE C_PROJECT_ID = IDBRIEF);

	SELECT COUNT(C_BPARTNER_ID) INTO CANT FROM PMB_AUTHOR WHERE C_PROJECT_ID = IDBRIEF;
	
	CONT := 1;
	NAM := '';

	WHILE CONT <= CANT LOOP	
	
	SELECT NAME INTO NAM2 FROM C_BPARTNER WHERE C_BPARTNER_ID = CBID[CONT];

	 IF CONT = 1 THEN 
	NAM := NAM2;
	ELSE
	NAM := NAM ||' -> '||NAM2;
	END IF;
--RAISE NO_DATA_FOUND||nam;
	CONT := CONT +1;

	END LOOP;

	:NEW.AUTOR := NAM;
	
RETURN NEW;
END PMB_BRIEF
]]></body>
    </trigger>
  </database>
